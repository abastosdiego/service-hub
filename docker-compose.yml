services:
  service-hub:
    container_name: service-hub
    build:
      context: .
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
#      - /app/node_modules  # Evita sobrescrever node_modules do container, porém atrapalha o vscode. Pois ele não encontra as bibliotecas instaladas no projeto.
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      no_proxy: localhost, service-hub-postgres
      NODE_ENV: development
      INSTALL_NODE_MODULES: true
      CREATE_NEW_PROJECT_NESTJS: false
    restart: unless-stopped
    depends_on:
      - service-hub-postgres
  service-hub-postgres:
    container_name: service-hub-postgres
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: service-hub
    volumes:
      #- './postgres_data:/var/lib/postgresql/data'
      - /var/lib/postgresql/data  # Evita sobrescrever a pasta postgres_data do container
    ports:
      - "5432:5432"
  # mongo:
  #   container_name: product-mongo
  #   image: mongo
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
  # mongo-express:
  #   container_name: product-mongo-express
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
  #     ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/
  #     ME_CONFIG_BASICAUTH: false
